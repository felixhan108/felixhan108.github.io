{"version":3,"file":"component---src-pages-index-js-96f0e0a03dc452a512a7.js","mappings":"4PA2CA,MAxCiB,IAAgB,IAAf,MAAEA,GAAO,EACzB,OACE,sBAAIC,MAAO,CAAEC,UAAU,SACpBF,EAAMG,KAAIC,IACT,MAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,sBAAIC,IAAKL,EAAKG,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYV,KAG/B,6BAAO,IACHD,EAAKE,YAAYU,QAAQ,kBAAgB,IAC1CZ,EAAKE,YAAYW,aAAa,MAGnC,+BACE,qBACEC,wBAAyB,CACvBC,OAAQf,EAAKE,YAAYc,aAAehB,EAAKiB,SAE/CN,SAAS,kBAIZ,IAGN,ECPT,MAzBkB,IAAwB,UAAvB,KAAEO,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBrB,QAAK,QACzCL,EAAQsB,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjB5B,EAAM6B,OAEN,gBAAC,IAAM,CAACN,SAAUA,EAAUlB,MAAOmB,GACjC,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACD,SAAUA,EAAUlB,MAAOmB,GACjC,gBAAC,IAAG,MACJ,gBAAC,EAAQ,CAACxB,MAAOA,IACV,EAWN,MAAM8B,EAAO,IAAM,gBAAC,IAAG,CAACzB,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/PostList.jsx","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostList = ({ posts }) => {\n  return (\n    <ol style={{ listStyle: `none` }}>\n      {posts.map(post => {\n        const title = post.frontmatter.title || post.fields.slug\n\n        return (\n          <li key={post.fields.slug}>\n            <article\n              className=\"post-list-item\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <h2>\n                  <Link to={post.fields.slug} itemProp=\"url\">\n                    <span itemProp=\"headline\">{title}</span>\n                  </Link>\n                </h2>\n                <small>\n                  v{post.frontmatter.version} (last updated:{\" \"}\n                  {post.frontmatter.latestUpdate})\n                </small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.frontmatter.description || post.excerpt,\n                  }}\n                  itemProp=\"description\"\n                />\n              </section>\n            </article>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n\nexport default PostList\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostList from \"../components/PostList\"\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <PostList posts={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { latestUpdate: DESC } }\n      filter: { fileAbsolutePath: { regex: \"/content/note/\" } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          version\n          latestUpdate(formatString: \"YY/MM/DD\")\n        }\n      }\n    }\n  }\n`\n"],"names":["posts","style","listStyle","map","post","title","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","version","latestUpdate","dangerouslySetInnerHTML","__html","description","excerpt","data","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","length","Head"],"sourceRoot":""}