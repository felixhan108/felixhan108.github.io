{"componentChunkName":"component---src-templates-blog-post-js","path":"/note/DesignSystem/","result":{"data":{"site":{"siteMetadata":{"title":"Minimal Software Developer"}},"markdownRemark":{"id":"b2986910-b569-5063-b08b-f8e89c68d2c1","excerpt":"…","html":"<blockquote>\n<p>재사용 가능한 컴포넌트 설계와 상태 관리는 많은 개발자들이 어려워 하는 부분입니다.\n이는 복잡한 주제이며, 경험과 실습을 통해 점진적으로 익혀나가는 것이 일반적입니다.\n지속적인 학습과 실제 프로젝트에 적용해보는 과정을 통해 점차 개선될 수 있습니다.</p>\n</blockquote>\n<h2>프로세스</h2>\n<ol>\n<li>최초 컨셉의 재활용 컴포넌트를 업로드 한다.</li>\n<li>각종 테스트를 적용한다.</li>\n<li>새로운 적용을 해본다.</li>\n<li>타임라인을 공유한다.</li>\n</ol>\n<h2>기본구성</h2>\n<blockquote>\n<p>react component를 예시로 작성 됨.</p>\n</blockquote>\n<h3>Todo</h3>\n<ol>\n<li>Component Function</li>\n<li>Styling</li>\n<li>Variant</li>\n<li>State</li>\n</ol>\n<h3>Component Function</h3>\n<blockquote>\n<p>필요한 컴포넌트를 제작합니다.\n외부에서도 사용할 수 있도록 react의 고유 기능인 <code class=\"language-text\">{chidren}</code>을 사용하여 컴포넌트 내부에 새로운 Markup을 넣어 재활용 가능하게 사용하는 방법입니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Styling</h3>\n<blockquote>\n<p>button에 css를 적용합니다.\ncss를 적용하는 방법은 크게 <code class=\"language-text\">tailwind.css</code>, <code class=\"language-text\">CSS Module</code>, <code class=\"language-text\">CSS-in-JS</code> 방식이 있습니다.\n사이트를 새로 구축해 <code class=\"language-text\">DesignSystem</code>을 만드는 경우 러닝커브가 낮은 순으로 채용 되는 경우가 많습니다.</p>\n</blockquote>\n<ul>\n<li>예를들어 <code class=\"language-text\">퍼블리셔</code>와 분업 하여 작업하는 경우 기존 CSS와 사용법이 가장 비슷한 <code class=\"language-text\">CSS Module</code> 을 이용합니다.</li>\n<li>tailwind와 react 환경의 이해도 가 있는 경우 tailwind를 이용해 컴포넌트 단위로 분업 하여 작업할 수 있습니다.</li>\n<li><code class=\"language-text\">퍼블리셔</code> 포지션이 따로 없으며 <code class=\"language-text\">프론트엔드-쥬니어</code> 가 있는 경우 조금 더 JS 친화적인 CSS-in-JS방식을 선택하여 사용할 수 있습니다. (단, 기존 방식 보다는 러닝 커브와 정교한 코드 컨벤션이 없다면 복잡도가 증가할 가능성이 있습니다.)</li>\n</ul>\n<h4>Tailwind</h4>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font-bold py-2 px-4 rounded<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>React CSS Module</h4>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./Button.module.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> \n\t\t\t</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> \n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Styled-Component</h4>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> StyledButton <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  background-color: #95a5a6;\n  padding: 2px 4px;\n  border-radius: 5px;\n\n  &amp;:hover {\n    background-color: #7f8c8d};\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StyledButton</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StyledButton</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Variant</h3>\n<blockquote>\n<p>디자이너가 주는 다양한 버튼의 디자인을 적용하는 방법입니다.\n예제로는 primary, outline이 들어간다고 가정 하였습니다.</p>\n</blockquote>\n<h4>Tailwind</h4>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n\tchildren<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span> \n\tvariant<span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> variant <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> ButtonProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\t\t\tfont-bold py-2 px-4 rounded\n\t\t\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>variant <span class=\"token operator\">===</span> <span class=\"token string\">\"primary\"</span> \n\t\t\t\t<span class=\"token operator\">?</span> <span class=\"token string\">'font-bold py-2 px-4 rounded'</span> \n\t\t\t\t<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n\t\t\t<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\t\t\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>variant <span class=\"token operator\">===</span> <span class=\"token string\">\"outline\"</span> \n\t\t\t\t<span class=\"token operator\">?</span> <span class=\"token string\">'bg-transparent border border-blue-500 text-blue-500'</span> \n\t\t\t\t<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n\t\t\t<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\t\t</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>React CSS Module</h4>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./Button.module.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n\tchildren<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span> \n\tvariant<span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> variant <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> ButtonProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\t\t\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>styles<span class=\"token punctuation\">.</span>button<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> \n\t\t\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>variant <span class=\"token operator\">===</span> <span class=\"token string\">\"primary\"</span> <span class=\"token operator\">?</span> styles<span class=\"token punctuation\">.</span>primary <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\t\t\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>variant <span class=\"token operator\">===</span> <span class=\"token string\">\"outline\"</span> <span class=\"token operator\">?</span> styles<span class=\"token punctuation\">.</span>outline <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\t\t</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> \n\t\t\t</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> \n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Styled-Component</h4>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n\tchildren<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span> \n\tvariant<span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> StyledButton <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> variant<span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>variant <span class=\"token operator\">===</span> <span class=\"token string\">\"primary\"</span>\n    <span class=\"token operator\">&amp;&amp;</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\t\tbackground-color: #95a5a6;\n\t\tpadding: 2px 4px;\n\t\tborder-radius: 5px;\n\t\t\n\t\t&amp;:hover {\n\t\t\tbackground-color: #7f8c8d;\n\t\t}\n\t</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n  </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>variant <span class=\"token operator\">===</span> <span class=\"token string\">\"outline\"</span>\n    <span class=\"token operator\">&amp;&amp;</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      background-color: transparent;\n      color: #3498db;\n      border: 1px solid #3498db;\n      &amp;:hover {\n        background-color: #3498db;\n        color: white;\n      }\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> variant <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> ButtonProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StyledButton</span></span> <span class=\"token attr-name\">variant</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>variant<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StyledButton</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>State</h3>\n<blockquote>\n<p>컴포넌트에 필요한  <code class=\"language-text\">state(상태)</code>를 적용하는것은 <code class=\"language-text\">props</code>를 더 만들어서 받아 주게 됩니다.</p>\n</blockquote>\n<h4>Tailwind</h4>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> variant<span class=\"token punctuation\">,</span> disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> \n\t\t\t<span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\t\t\t\tfont-bold py-2 px-4 rounded\n\t\t\t\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>variant <span class=\"token operator\">===</span> <span class=\"token string\">\"outline\"</span> \n\t\t\t\t\t<span class=\"token operator\">?</span> <span class=\"token string\">'bg-transparent border border-blue-500 text-blue-500'</span> \n\t\t\t\t\t<span class=\"token operator\">:</span> <span class=\"token string\">'bg-blue-500 text-white'</span>\n\t\t\t\t<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\t\t\t</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span>\n\t\t\t<span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>disabled<span class=\"token punctuation\">}</span></span>\n\t\t<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"UI개발을 위한 DesignSystem Guide","date":null,"description":"UI개발을 위한 디자인시스템 가이드를 작성했습니다."}},"previous":{"fields":{"slug":"/note/ReactCheet/"},"frontmatter":{"title":"React-CheetBook::자주 사용하는 블록묶음 모음음"}},"next":{"fields":{"slug":"/note/Backend/"},"frontmatter":{"title":"Backend 기초지식식"}}},"pageContext":{"id":"b2986910-b569-5063-b08b-f8e89c68d2c1","previousPostId":"12a07b84-046f-55fd-91dd-dca9ee423bd1","nextPostId":"588d33ba-d0e7-576b-b3d1-5c1a3e669cac"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}