{"componentChunkName":"component---src-templates-blog-post-js","path":"/note/Next.js/","result":{"data":{"site":{"siteMetadata":{"title":"Minimal Software Developer"}},"markdownRemark":{"id":"7e17ff0c-59d3-5e1e-aa01-e30ec4763f03","excerpt":"Routing 폴더 밑에 파일 제작 하는 방식에 대한 설명과 비지니스로직 입니다.\n 와  또는  와  등의 설명을 합니다. 🥯 Defining Routes 웹 화면의 route를 next.js에서 만드는 방법을 설명 합니다. 🧁 app/dashboard 📁 👉  🥯 Pages…","html":"<h1 id=\"routing\" style=\"position:relative;\"><a href=\"#routing\" aria-label=\"routing permalink\" class=\"anchor before\"><svg></svg></a>Routing</h1>\n<blockquote>\n<p><code class=\"language-text\">app</code>폴더 밑에 파일 제작 하는 방식에 대한 설명과 비지니스로직 입니다.\n<code class=\"language-text\">page.jsx</code> 와 <code class=\"language-text\">layout.jsx</code> 또는 <code class=\"language-text\">templates.jsx</code> <code class=\"language-text\">&lt;link></code>와 <code class=\"language-text\">useRouter()</code> 등의 설명을 합니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Template</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ErrorBoundary</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Error</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loading</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ErrorBoundary</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NotFound</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Template</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"-defining-routes\" style=\"position:relative;\"><a href=\"#-defining-routes\" aria-label=\" defining routes permalink\" class=\"anchor before\"><svg></svg></a>🥯 Defining Routes</h2>\n<p>웹 화면의 route를 next.js에서 만드는 방법을 설명 합니다.</p>\n<h3 id=\"-appdashboard\" style=\"position:relative;\"><a href=\"#-appdashboard\" aria-label=\" appdashboard permalink\" class=\"anchor before\"><svg></svg></a>🧁 app/dashboard</h3>\n<p>📁<code class=\"language-text\">app/dashboard</code> 👉 <code class=\"language-text\">http://site.com/dashboard</code></p>\n<h2 id=\"-pages\" style=\"position:relative;\"><a href=\"#-pages\" aria-label=\" pages permalink\" class=\"anchor before\"><svg></svg></a>🥯 Pages</h2>\n<p>Routes를 만든 다음 폴더 아래에 indexpage를 만드는 방법에 대한 설명입니다.\n🔰 page.js는 <code class=\"language-text\">Server Components</code> 가 기본입니다.</p>\n<h3 id=\"-pagetsx\" style=\"position:relative;\"><a href=\"#-pagetsx\" aria-label=\" pagetsx permalink\" class=\"anchor before\"><svg></svg></a>🧁 page.tsx</h3>\n<p>📁<code class=\"language-text\">app/dashboard/page.jsx</code></p>\n<p><strong>파일 예시</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, Next.js!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-layouts-and-templates\" style=\"position:relative;\"><a href=\"#-layouts-and-templates\" aria-label=\" layouts and templates permalink\" class=\"anchor before\"><svg></svg></a>🥯 Layouts and Templates</h2>\n<p>routes폴더 아래에 생성할 수 있는 <code class=\"language-text\">layout.jsx</code>, <code class=\"language-text\">templates.jsx</code> 에 관한 내용입니다.\nroutes별로 공통의 레이아웃을 제작할 수 있습니다.\n🔰 Layout.js는 Metaata를 넣거나 Nav Links를 넣을 때 유용합니다.\n🔰 Template.js는 페이지 내부의 내부 filter나 search form에 유용합니다.</p>\n<h3 id=\"-layoutstsx\" style=\"position:relative;\"><a href=\"#-layoutstsx\" aria-label=\" layoutstsx permalink\" class=\"anchor before\"><svg></svg></a>🧁 Layouts.tsx</h3>\n<p>폴더에 <code class=\"language-text\">layout.js</code>를 넣어서 사용</p>\n<ul>\n<li><code class=\"language-text\">header</code> 와 <code class=\"language-text\">footer</code>와 같은 공통 양식 기입</li>\n<li>각각의 페이지마다 존재하는 <code class=\"language-text\">sidebar</code></li>\n</ul>\n<h3 id=\"-templatestsx\" style=\"position:relative;\"><a href=\"#-templatestsx\" aria-label=\" templatestsx permalink\" class=\"anchor before\"><svg></svg></a>🧁 Templates.tsx</h3>\n<p>폴더에 <code class=\"language-text\">template.js</code>를 넣어서 사용</p>\n<ul>\n<li>비슷한 구조를 가진 여러 페이지에 대해 공통 래퍼를 제공하고 싶지만, 각 페이지마다 독립적인 인스턴스를 원할 때 사용합니다.</li>\n<li>상태가 유지되지 않고 DOM 요소가 다시 생성됩니다.</li>\n<li>페이지 전환 시 새로운 인스턴스가 마운트되고 이전 인스턴스는 언마운트됩니다.</li>\n</ul>\n<h2 id=\"-linking-and-navigating\" style=\"position:relative;\"><a href=\"#-linking-and-navigating\" aria-label=\" linking and navigating permalink\" class=\"anchor before\"><svg></svg></a>🥯 Linking and Navigating</h2>\n<p>페이지와 페이지 사이를 움직이는 4가지의 방법에 대해 설명합니다.\n<code class=\"language-text\">&lt;Link></code>, <code class=\"language-text\">useRouter</code>, <code class=\"language-text\">redirect</code>, <code class=\"language-text\">History API</code>\n그리고 Routing 과 Navigation의 작동방식에 대한 설명이 있습니다.</p>\n<h3 id=\"-code-classlanguage-textltlinkcode\" style=\"position:relative;\"><a href=\"#-code-classlanguage-textltlinkcode\" aria-label=\" code classlanguage textltlinkcode permalink\" class=\"anchor before\"><svg></svg></a><strong>🧁 <code class=\"language-text\">&lt;Link></code></strong></h3>\n<p>기본적인 링크 방식입니다.\nmarkup에 사용하면 좋습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/link\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/dashboard<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Dashboard</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"-code-classlanguage-textuseroutercode\" style=\"position:relative;\"><a href=\"#-code-classlanguage-textuseroutercode\" aria-label=\" code classlanguage textuseroutercode permalink\" class=\"anchor before\"><svg></svg></a><strong>🧁 <code class=\"language-text\">useRouter()</code></strong></h3>\n<p>비지니스로직에서 원하는 페이지로 이동할 때 사용하는 hook 입니다.\nHistory API와 관련이 있습니다.\n특징 : CSR에서만 사용 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token string\">\"use client\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/navigation\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/dashboard\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Dashboard\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"-code-classlanguage-textredirectcode\" style=\"position:relative;\"><a href=\"#-code-classlanguage-textredirectcode\" aria-label=\" code classlanguage textredirectcode permalink\" class=\"anchor before\"><svg></svg></a><strong>🧁 <code class=\"language-text\">redirect()</code></strong></h3>\n<p>서버컴포넌트의 dataFetching 실패 시 redirect를 지원하는 함수입니다.\n특징 : SSR에서 사용 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> redirect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/navigation\"</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">AuthCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 서버에서 사용자 정보를 가져오는 함수</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProtectedComponent</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textnative-history-apicode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textnative-history-apicode\" aria-label=\"code classlanguage textnative history apicode permalink\" class=\"anchor before\"><svg></svg></a><strong><code class=\"language-text\">Native History API</code></strong></h3>\n<p>window에서 제공하는 <code class=\"language-text\">window.history.pushState</code> 와 <code class=\"language-text\">window.history.replaceState</code>를 사용하는 방식을 제공해줍니다.\n제공해주는 예제가 있으나 <code class=\"language-text\">useRouter()</code>를 이용하는 것이 아직 까진 더 현명해 보입니다.</p>\n<h4 id=\"-historypushstate-이용\" style=\"position:relative;\"><a href=\"#-historypushstate-%EC%9D%B4%EC%9A%A9\" aria-label=\" historypushstate 이용 permalink\" class=\"anchor before\"><svg></svg></a>🧁 .history.pushState 이용</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token string\">\"use client\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSearchParams <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/navigation\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">SortProducts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> searchParams <span class=\"token operator\">=</span> <span class=\"token function\">useSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">updateSorting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">sortOrder</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sort\"</span><span class=\"token punctuation\">,</span> sortOrder<span class=\"token punctuation\">)</span>\n    window<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateSorting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Sort Ascending</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateSorting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"desc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Sort Descending</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"-userouter-이용\" style=\"position:relative;\"><a href=\"#-userouter-%EC%9D%B4%EC%9A%A9\" aria-label=\" userouter 이용 permalink\" class=\"anchor before\"><svg></svg></a>🧁 useRouter() 이용</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token string\">\"use client\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter<span class=\"token punctuation\">,</span> useSearchParams <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/navigation\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">SortProducts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> searchParams <span class=\"token operator\">=</span> <span class=\"token function\">useSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">updateSorting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">sortOrder</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sort\"</span><span class=\"token punctuation\">,</span> sortOrder<span class=\"token punctuation\">)</span>\n\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">scroll</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateSorting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Sort Ascending</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateSorting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"desc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Sort Descending</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-error-handling\" style=\"position:relative;\"><a href=\"#-error-handling\" aria-label=\" error handling permalink\" class=\"anchor before\"><svg></svg></a>🥯 Error Handling</h2>\n<p>예상되는 에러 상항과 예상하지 못한 상황을 <code class=\"language-text\">error.tsx</code>, <code class=\"language-text\">global-error.tsx</code> 파일을 이용해 다루는 방법에 대한 이야기 입니다.</p>\n<h3 id=\"-errorjs\" style=\"position:relative;\"><a href=\"#-errorjs\" aria-label=\" errorjs permalink\" class=\"anchor before\"><svg></svg></a>🧁 error.js</h3>\n<p>레이아웃 폴더 구조 아래에 <code class=\"language-text\">error.js</code>를 사용합니다.\n<code class=\"language-text\">error.tsx</code>는 'use client' 기반입니다.</p>\n<ul>\n<li>app/error.js 👉 Common</li>\n<li>app/dashboard/error.js 👉 Optional</li>\n<li>app/global-error.js 👉 Uncommon</li>\n</ul>\n<p><strong>error.tsx를 사용하는 방법</strong>\ndashboard/page.js</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ErrorBoundary</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Error</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"loading-ui-and-streaming\" style=\"position:relative;\"><a href=\"#loading-ui-and-streaming\" aria-label=\"loading ui and streaming permalink\" class=\"anchor before\"><svg></svg></a>Loading UI and Streaming</h2>\n<h2 id=\"redirecting\" style=\"position:relative;\"><a href=\"#redirecting\" aria-label=\"redirecting permalink\" class=\"anchor before\"><svg></svg></a>Redirecting</h2>\n<h2 id=\"route-groups\" style=\"position:relative;\"><a href=\"#route-groups\" aria-label=\"route groups permalink\" class=\"anchor before\"><svg></svg></a>Route Groups</h2>\n<p><code class=\"language-text\">path</code>가 존재하지 않지만 논리적으로 페이지를 <code class=\"language-text\">Group</code> 하는 기능</p>\n<ul>\n<li><code class=\"language-text\">폴더구조 리팩토링</code> : 프로젝트의 다양한 기능을 주소 없이 논리적인 구조로 구분 하고 싶을때 사용</li>\n<li><code class=\"language-text\">레이아웃 분할</code> : path는 나누지 않았지만 각각의 <code class=\"language-text\">layout.js</code> 가 필요할때</li>\n</ul>\n<h3 id=\"use\" style=\"position:relative;\"><a href=\"#use\" aria-label=\"use permalink\" class=\"anchor before\"><svg></svg></a>Use</h3>\n<p>폴더구조에 <code class=\"language-text\">(괄호)</code>를 넣어서 작성</p>\n<h4 id=\"물리적-페이지-group\" style=\"position:relative;\"><a href=\"#%EB%AC%BC%EB%A6%AC%EC%A0%81-%ED%8E%98%EC%9D%B4%EC%A7%80-group\" aria-label=\"물리적 페이지 group permalink\" class=\"anchor before\"><svg></svg></a>물리적 페이지 Group</h4>\n<p><code class=\"language-text\">app/shop/account/page.js</code> 👉 <code class=\"language-text\">https://{siteURL}/shop/account</code>\n<code class=\"language-text\">app/marketing/about/page.js</code> 👉 <code class=\"language-text\">https://{siteURL}/about</code></p>\n<h4 id=\"route-groups-1\" style=\"position:relative;\"><a href=\"#route-groups-1\" aria-label=\"route groups 1 permalink\" class=\"anchor before\"><svg></svg></a>Route Groups</h4>\n<p><code class=\"language-text\">app/(shop)/account/page.js</code>👉 <code class=\"language-text\">https://{siteURL}/account</code>\n<code class=\"language-text\">app/(marketing)/about/page.js</code>👉<code class=\"language-text\">https://{siteURL}/about</code></p>\n<h2 id=\"project-organization\" style=\"position:relative;\"><a href=\"#project-organization\" aria-label=\"project organization permalink\" class=\"anchor before\"><svg></svg></a>Project Organization</h2>\n<h2 id=\"dynamic-routes\" style=\"position:relative;\"><a href=\"#dynamic-routes\" aria-label=\"dynamic routes permalink\" class=\"anchor before\"><svg></svg></a>Dynamic Routes</h2>\n<p>주소에 있는 <code class=\"language-text\">params</code>값을 가져 옵니다.\n<code class=\"language-text\">[folderName]</code>, <code class=\"language-text\">[id]</code>, <code class=\"language-text\">[slug]</code></p>\n<h3 id=\"a-g\" style=\"position:relative;\"><a href=\"#a-g\" aria-label=\"a g permalink\" class=\"anchor before\"><svg></svg></a>a. g.</h3>\n<p><code class=\"language-text\">app/blog/[slug]/page.js</code> 👉 <code class=\"language-text\">/blog/a</code> 👉 <code class=\"language-text\">{ slug : 'a\" }</code></p>\n<h2 id=\"parallel-routes\" style=\"position:relative;\"><a href=\"#parallel-routes\" aria-label=\"parallel routes permalink\" class=\"anchor before\"><svg></svg></a>Parallel Routes</h2>\n<h2 id=\"intercepting-routes\" style=\"position:relative;\"><a href=\"#intercepting-routes\" aria-label=\"intercepting routes permalink\" class=\"anchor before\"><svg></svg></a>Intercepting Routes</h2>\n<h2 id=\"route-handlers\" style=\"position:relative;\"><a href=\"#route-handlers\" aria-label=\"route handlers permalink\" class=\"anchor before\"><svg></svg></a>Route Handlers</h2>\n<h2 id=\"middleware\" style=\"position:relative;\"><a href=\"#middleware\" aria-label=\"middleware permalink\" class=\"anchor before\"><svg></svg></a>Middleware</h2>\n<h2 id=\"internationalization\" style=\"position:relative;\"><a href=\"#internationalization\" aria-label=\"internationalization permalink\" class=\"anchor before\"><svg></svg></a>Internationalization</h2>\n<h1 id=\"data-fetching\" style=\"position:relative;\"><a href=\"#data-fetching\" aria-label=\"data fetching permalink\" class=\"anchor before\"><svg></svg></a>Data Fetching</h1>\n<blockquote>\n<p>ServerComponent에서의 Data Fetching을 설명합니다.\nreact-query를 이용하는것과의 차이점을 알아 보겠습니다.</p>\n</blockquote>\n<h1 id=\"rendering\" style=\"position:relative;\"><a href=\"#rendering\" aria-label=\"rendering permalink\" class=\"anchor before\"><svg></svg></a>Rendering</h1>\n<blockquote>\n<p>CSR,SSR, 그리고 Static 과 Dynamic 렌더링이 next.js에서 어떤식으로 구동되는지 알아 봅니다.</p>\n</blockquote>\n<h1 id=\"styling\" style=\"position:relative;\"><a href=\"#styling\" aria-label=\"styling permalink\" class=\"anchor before\"><svg></svg></a>Styling</h1>\n<blockquote>\n<p>지원하는 css 를 방식별로 알아 봅니다.</p>\n</blockquote>\n<h1 id=\"optiizations\" style=\"position:relative;\"><a href=\"#optiizations\" aria-label=\"optiizations permalink\" class=\"anchor before\"><svg></svg></a>Optiizations</h1>\n<blockquote>\n<p>최적화에 대해서 알아봅니다. Image, Fonts, Script 등을 어떻게 처리하면 되는지 알아 봅니다.</p>\n</blockquote>","frontmatter":{"title":"Fullstack 개발을 위한 Next.js 실무 GUIDE","date":null,"description":"25년 개발자들이 가장 선호하는 풀스택 프레임워크의 Dcoument를 실무에 가장 필요한 내용들로 GUIDE 작성을 했습니다."}},"previous":{"fields":{"slug":"/note/Backend/"},"frontmatter":{"title":"Backend 가벼운 가이드라인"}},"next":{"fields":{"slug":"/note/DesignSystem/"},"frontmatter":{"title":"디자인/프론트엔드를 위한 UI개발 DesignSystem Guide"}}},"pageContext":{"id":"7e17ff0c-59d3-5e1e-aa01-e30ec4763f03","previousPostId":"588d33ba-d0e7-576b-b3d1-5c1a3e669cac","nextPostId":"b2986910-b569-5063-b08b-f8e89c68d2c1"}},"staticQueryHashes":["1182391961","2841359383"],"slicesMap":{}}